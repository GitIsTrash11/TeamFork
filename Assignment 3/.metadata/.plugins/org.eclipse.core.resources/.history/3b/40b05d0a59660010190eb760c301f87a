package com.book;

import java.io.*;
import java.util.Scanner;



public class BookPages {

    public static Book1[] inputBooks(Scanner sc) {
        Book1[] books = new Book1[3];

        for (int i = 0; i < 3; i++) {
            String name = sc.next();
            String email = sc.next();
            char gender = sc.next().charAt(0);
            Author a1 = new Author(name, email, gender);

       1     double price = sc.nextDouble();
            int qty = sc.nextInt();

            books[i] = new Book1(name, a1, price, qty);
        }

        return books;
    }
    
        public static Book[] inputBooksData() {
            Scanner sc = new Scanner(System.in);
            Book[] books = new Book[3];

            for (int i = 0; i < 3; i++) {
                System.out.println("Enter details for Book " + (i + 1) + ":");

                System.out.print("Title: ");
                String title = sc.nextLine();

                System.out.print("Author: ");
                String author = sc.nextLine();

                System.out.print("Price: ");
                float price = sc.nextFloat();
                sc.nextLine(); // consume leftover newline

                System.out.print("Publisher: ");
                String publisher = sc.nextLine();

                books[i] = new Book(title, author, price, publisher);
                System.out.println(); // Blank line for readability
            }

            return books;
        }
    

    public static void searchById(Scanner sc, Book[] books) {
        int id = sc.nextInt();
        try {
            Book b = findBookById(id, books);
            b.display();
        } catch (BookIdNotFoundException e) {
            System.err.println("Error: " + e.getMessage());
        }
    }

    public static void serializeBooks(Book1[] books) {
        try {
            FileOutputStream fos = new FileOutputStream("BookDetails.ser");
            ObjectOutputStream oos = new ObjectOutputStream(fos);

            oos.writeObject(books);
            oos.close();
            fos.close();
            System.out.println("Array of students serialized successfully.");
        } catch (IOException e) {
            System.out.println("Serialization Error: " + e.getMessage());
        }
    }



    public static void updateBookDetails(Scanner sc) {
        String author = sc.next();
        String title = sc.next();
        int price = sc.nextInt();
        String publisher = sc.next();

        Author a = new Author(author, "example@example.com", 'M');
        Book1 b1 = new Book1(title, a, price, 1);

        System.out.println(b1);
//        System.out.println();

        Book1 b2 = new Book1(title, a, price, 2);
       
        System.out.println(b2);
    }

    public static void createAndPrintSampleBook() {
        Author a = new Author("Abhinav", "abhinavssr2003@gmail.com", 'M');
        Book1 b1 = new Book1("BookName", a, 10000, 1);
        System.out.println(b1);
    }


    public static Book findBookById( int id, Book[] books) throws BookIdNotFoundException {
        for (Book book : books) {
            if (book.getBookNo() == id) {
                return book;
            }
        }
        throw new BookIdNotFoundException("Book ID " + id + " not found");
    }

    public static boolean searchBook(int bookNo, Book[] books) {
        for (Book book : books) {
            if (book.getBookNo() == bookNo) {
                return true;
            }
        }
        return false;
    }
}
