package com.assignments;
import java.util.*;

class InvalidBookTitleException extends RuntimeException {
    public InvalidBookTitleException(String message) {
        super(message);
    }
}

class InvalidBookPriceException extends RuntimeException {
    public InvalidBookPriceException(String message) {
        super(message);
    }
}

class BookNotFoundException extends Exception {
    public BookNotFoundException(String message) {
        super(message);
    }
}

class Author {
    private String name;
    private String email;
    private char gender;

    public Author(String name, String email, char gender) {
        this.name = name;
        this.email = email;
        this.gender = gender;
    }

    public String toString() {
        return name + " (" + gender + ") at " + email;
    }
}

class Book {
    private static int bookCount = 0;
    private int bookNo;
    private String name;
    private Author author;
    private double price;
    private int qty;
    private static final String copyright;

    static {
        copyright = "Copyright © 2025";
    }

    public Book(String name, Author author, double price, int qty) {
        this.bookNo = ++bookCount;
        setName(name);
        this.author = author;
        setPrice(price);
        this.qty = qty;
    }

    public int getBookNo() {
        return bookNo;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        if (name == null || name.length() < 4) {
            throw new InvalidBookTitleException("Book title must be at least 4 characters.");
        }
        this.name = name;
    }

    public Author getAuthor() {
        return author;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        if (price < 1 || price > 5000) {
            throw new InvalidBookPriceException("Book price must be between 1 and 5000.");
        }
        this.price = price;
    }

    public int getQty() {
        return qty;
    }

    public static String getCopyright() {
        return copyright;
    }

    public String toString() {
        return "Book No: " + bookNo +
               "\nTitle: " + name +
               "\nAuthor: " + author +
               "\nPrice: ₹" + price +
               "\nQuantity: " + qty;
    }
}

public class EngineeringBook extends Book {
    private String category;

    public EngineeringBook(String name, Author author, double price, int qty, String category) {
        super(name, author, price, qty);
        this.category = category;
    }

    public String toString() {
        return super.toString() + "\nCategory: " + category;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        EngineeringBook[] books = new EngineeringBook[3];

        for (int i = 0; i < books.length; i++) {
            System.out.println("\nEnter details for Engineering Book " + (i + 1) + ":");
            books[i] = inputEngineeringBook(sc);
        }

        System.out.print("\nEnter Book No to search: ");
        int searchId = sc.nextInt();

        try {
            EngineeringBook result = null;
            for (EngineeringBook b : books) {
                if (b != null && b.getBookNo() == searchId) {
                    result = b;
                    break;
                }
            }
            if (result == null) throw new BookNotFoundException("Book with ID " + searchId + " not found.");
            System.out.println("\nBook Found:\n" + result);
            System.out.println("Copyright: " + Book.getCopyright());
        } catch (BookNotFoundException e) {
            System.out.println("Error: " + e.getMessage());
        } finally {
            sc.close();
        }
    }

    public static EngineeringBook inputEngineeringBook(Scanner sc) {
        System.out.print("Title: ");
        String title = sc.nextLine();

        System.out.print("Author Name: ");
        String authorName = sc.nextLine();

        System.out.print("Author Email: ");
        String email = sc.nextLine();

        System.out.print("Gender (M/F): ");
        char gender = sc.next().charAt(0);
        sc.nextLine(); // Consume leftover newline

        Author author = new Author(authorName, email, gender);

        System.out.print("Price: ");
        double price = Double.parseDouble(sc.nextLine());

        System.out.print("Quantity: ");
        int qty = Integer.parseInt(sc.nextLine());

        System.out.print("Category: ");
        String category = sc.nextLine();

        return new EngineeringBook(title, author, price, qty, category);
    }
}
